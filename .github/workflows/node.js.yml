name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Gas-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install HardHat
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: npm i hardhat

      - name: Run gas tests and generate report
        id: gas_test
        run: npx hardhat test
        env:
          BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
          CMC_API_KEY: ${{ secrets.CMC_API_KEY }}

      - name: Generate Markdown Table
        run: node parseGasReport.js

      - name: Encode MD Gas Report to Base64
        run: echo "GAS_REPORT_BASE64=$(cat md_gas_report.txt | base64 -w 0)" >> $GITHUB_ENV

      - name: Decode Base64 to MD Gas Report
        id: decode_gas_report
        run: echo "::set-output name=gas_report_decoded::$(echo "$GAS_REPORT_BASE64" | base64 -d)"

      - name: Comment PR with Gas Test Report
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            # Gas Test Report ðŸ“Š
            The gas test results are as follows:
            ${{ steps.decode_gas_report.outputs.gas_report_decoded }}
          comment_tag: 'gas_report'

  Coverage-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install HardHat
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: npm i hardhat

      - name: Run tests and generate coverage
        run: npx hardhat coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

      # Save cache only if it was not restored before
      - name: Save cache
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
